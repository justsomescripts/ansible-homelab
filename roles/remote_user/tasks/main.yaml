---
- name: Ensure sudo is installed
  ansible.builtin.package:
    name: sudo
  when: ansible_user == 'root'

- name: Ensure admin user is present
  ansible.builtin.user:
    name: "{{ remote_user__admin.user }}"
    groups: "{{ remote_user__admin.groups }}"
    password: "{{ remote_user__admin.password | password_hash('sha512') }}"
    update_password: "{{ remote_user__admin.update_password }}"
  become: true
  when: (ansible_user != remote_user__admin.user) and (remote_user__admin.create | bool)

- name: Adjust prompt
  ansible.builtin.template:
    src: bashrc.j2 # noqa no-relative-paths
    dest: /home/{{ remote_user__admin.user }}/.bashrc
    owner: "{{ remote_user__admin.user }}"
    group: "{{ remote_user__admin.user }}"
    mode: "0644"
  when: remote_user__prompt.enabled | bool

- name: Adjust Tmux
  ansible.builtin.template:
    src: tmux.conf.j2 # noqa no-relative-paths
    dest: /home/{{ remote_user__admin.user }}/.tmux.conf
    owner: "{{ remote_user__admin.user }}"
    group: "{{ remote_user__admin.user }}"
    mode: "0644"
  when: remote_user__tmux.enabled | bool

- name: Configure SSH
  ansible.builtin.template:
    src: sshd_config.conf.j2
    dest: /etc/ssh/sshd_config.d/user.conf
    mode: "0644"
    owner: root
    group: root
  become: true
  notify:
    - Restart SSHD

- name: Create SSH directory
  ansible.builtin.file:
    state: directory
    path: /home/{{ remote_user__admin.user }}/.ssh/
    mode: "0755"
    owner: "{{ remote_user__admin.user }}"
    group: "{{ remote_user__admin.user }}"
  when: remote_user__ssh.pubkey_auth_enabled | bool

- name: Add SSH keys to home
  ansible.builtin.copy:
    content: "{{ remote_user__ssh.sshkey }}"
    dest: /home/{{ remote_user__admin.user }}/.ssh/authorized_keys
    mode: "0600"
    owner: "{{ remote_user__admin.user }}"
    group: "{{ remote_user__admin.user }}"
  when: remote_user__ssh.pubkey_auth_enabled | bool

- name: Configure PAM agent auth
  when: (remote_user__ssh.pubkey_auth_enabled | bool) and (remote_user__ssh.agent_auth.enabled | bool)
  become: true
  block:

    - name: Ensure libpam-ssh-agent-auth is installed
      ansible.builtin.package:
        name: libpam-ssh-agent-auth

    - name: Ensure SSH_AUTH_SOCK is kept
      ansible.builtin.copy:
        src: sudo_ssh_auth
        dest: /etc/sudoers.d/sudo_ssh_auth
        mode: "0600"
        owner: root
        group: root

    - name: Update PAM sudo config
      ansible.builtin.lineinfile:
        line: auth sufficient pam_ssh_agent_auth.so file={{ remote_user__ssh.agent_auth.authorized_keys_dir }}
        path: /etc/pam.d/sudo
        insertbefore: '^@include common-auth$'

    - name: Check if /etc/pam.d/sudo-i exists (common on Debian)
      ansible.builtin.stat:
        path: /etc/pam.d/sudo
      register: sudo_i

    - name: Update PAM sudo-i config
      ansible.builtin.lineinfile:
        line: auth sufficient pam_ssh_agent_auth.so file={{ remote_user__ssh.agent_auth.authorized_keys_dir }}
        path: /etc/pam.d/sudo-i
        insertbefore: '^@include common-auth$'
      when: sudo_i.stat.exists

    - name: Add SSH keys for PAM sudo
      ansible.builtin.copy:
        content: "{{ remote_user__ssh.sshkey }}"
        dest: /etc/ssh/sudo_authorized_keys
        mode: "0600"
        owner: root
        group: root

- name: Ensure SSHD is running after initialization
  ansible.builtin.service:
    name: sshd
    state: started
    enabled: true
  become: true
