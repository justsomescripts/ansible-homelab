---
- name: Create group
  when: pve_user_configuration__group.create | bool
  block:

    - name: Get list of available groups
      ansible.builtin.command:
        cmd: >
          pveum group list
          --noborder
          --noheader
          --output-format json
      register: pve_groups
      changed_when: false
      become: true

    - name: "Create group if it doesn't exist yet: {{ pve_user_configuration__group.name }}"
      ansible.builtin.command:
        cmd: >
          pveum group {{
                       'add' if (not pve_groups.stdout | from_json | json_query('[*].groupid')
                        is contains(pve_user_configuration__group.name))
                        else 'modify'
                      }}
          "{{ pve_user_configuration__group.name }}"
          --comment "{{ pve_user_configuration__group.comment }}"
      changed_when: true
      become: true

- name: Modify ACL
  when: pve_user_configuration__acl.create | bool
  block:

    - name: Update ACL
      ansible.builtin.command:
        cmd: >
          pveum acl modify "{{ pve_user_configuration__acl.path }}"
          {{
              '--groups "' + pve_user_configuration__acl.groups | join(',') + '"'
              if pve_user_configuration__acl.groups
          }}
          {{
              '--users "' + pve_user_configuration__acl.users | join(',') + '"'
              if pve_user_configuration__acl.users
          }}
          --roles     "{{ pve_user_configuration__acl.roles | join(',') }}"
          --propagate "{{ '1' if pve_user_configuration__acl.propagate else '0' }}"
      changed_when: true
      become: true

- name: Create user
  when: pve_user_configuration__user.create | bool
  block:

    - name: Get list of available users
      ansible.builtin.command:
        cmd: >
          pveum user list
          --noborder
          --noheader
          --output-format json
      register: pve_users
      changed_when: false
      become: true

    - name: "Create user if it doesn't exist yet: {{ pve_user_configuration__user.name }}"
      ansible.builtin.command:
        cmd: >
          pveum user  {{
                       'add' if (not pve_users.stdout | from_json | json_query('[*].userid')
                        is contains(pve_user_configuration__user.name + '@' + pve_user_configuration__user.realm))
                        else 'modify'
                      }}
          "{{ pve_user_configuration__user.name }}@{{ pve_user_configuration__user.realm }}"
          --firstname "{{ pve_user_configuration__user.firstname }}"
          --lastname  "{{ pve_user_configuration__user.lastname }}"
          --email     "{{ pve_user_configuration__user.mail }}"
          --groups    "{{ pve_user_configuration__user.groups | join(',') }}"
          --comment   "{{ pve_user_configuration__user.comment }}"
          --expire    "{{ pve_user_configuration__user.expire }}"
          {{
              '--password "' + pve_user_configuration__user.password + '"'
              if (not pve_users.stdout | from_json | json_query('[*].userid')
              is contains(pve_user_configuration__user.name + '@' + pve_user_configuration__user.realm))
          }}
      changed_when: true
      become: true
